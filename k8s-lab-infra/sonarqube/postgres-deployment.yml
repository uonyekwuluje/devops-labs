---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: sonarqube
  labels:
    app: postgres
data:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  PGDATA: /var/lib/postgresql/data/pgdata
  POSTGRES_HOST_AUTH_METHOD: trust

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-nfs-pv
  labels:
    storage: nfs 
spec:
  capacity:
    storage: 4Gi
  accessModes:
  - ReadWriteMany 
  persistentVolumeReclaimPolicy: Recycle
  nfs: 
    path: /data/sonarqube/postgres 
    server: 192.168.1.24
    readOnly: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-nfs-claim
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: ""
  selector:
    matchLabels:
      storage: "nfs"


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          imagePullPolicy: "IfNotPresent"
          resources: 
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          ports:
          - containerPort: 5432
          envFrom:
          - configMapRef:
              name: postgres-config
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb-nfs
      volumes:
      - name: postgredb-nfs
        persistentVolumeClaim:
          claimName: sonarqube-nfs-claim

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: sonarqube
  labels:
    app: postgres
spec:
  ports:
   - port: 5432
  selector:
   app: postgres
