---
apiVersion: v1
kind: Namespace
metadata:
  name: sonarqube

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-data-storage-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  hostPath:
    path: /data/sonarqube/data
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - prod-kube-node03

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-extension-storage-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  hostPath:
    path: /data/sonarqube/extension
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - prod-kube-node03


---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-data-pvc
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 3Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-extensions-pvc
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: sonarqube
type: Opaque
data:
  password: cGFzc3dvcmQxMjMK

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-cm
  namespace: sonarqube
  labels:
    app: sonarqube
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://192.168.1.73:5432/sonar_db"
  SONARQUBE_JDBC_USERNAME: "sonaradmin"
  JAVA_OPTS: "-Duser.timezone=America/New_York -Xmx2048m"


---
apiVersion: apps/v1 
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube-deployment
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
      - name: init
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      containers:
        - name: sonarqube
          image: sonarqube:8.9.0-community
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 8000m
              memory: 2048Mi
          volumeMounts:
          - mountPath: "/opt/sonarqube/data/"
            name: sonar-data
          - mountPath: "/opt/sonarqube/extensions/"
            name: sonar-extensions
          env:
          - name: "SONARQUBE_JDBC_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          envFrom:
          - configMapRef:
              name: sonarqube-cm
          ports:
          - containerPort: 9000
            protocol: TCP
      volumes:
      - name: sonar-data
        persistentVolumeClaim:
          claimName: sonarqube-data-pvc
      - name: sonar-extensions
        persistentVolumeClaim:
          claimName: sonarqube-extensions-pvc

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
  name: sonarqube-svc
  namespace: sonarqube
spec:
  ports:
    - name: sonar
      port: 80
      protocol: TCP
      targetPort: 9000
      nodePort: 30036
  selector:
    app: sonarqube
  type: NodePort
