---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-data-storage-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  hostPath:
    path: /data/sonarqube/data
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - ub18-kube-node02

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-extension-storage-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  hostPath:
    path: /data/sonarqube/extension
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - ub18-kube-node02


---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-data-pvc
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: local-storage
  resources:
    requests:
      storage: 3Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-extensions-pvc
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: local-storage
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: sonarqube
type: Opaque
data:
  password: c2VjdXJlcGFzc3dvcmQ=

---
apiVersion: apps/v1 
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube-deployment
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
      - name: init
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        - fs.file-max=65536
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
          runAsNonRoot: False
      containers:
      - name: sonarqube
        #image: sonarqube:9.0-community
        image: sonarqube:9.1.0-community
        #image: sonarqube:7.1
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: "/opt/sonarqube/data/"
          name: sonar-data
        - mountPath: "/opt/sonarqube/extensions/"
          name: sonar-extensions
        env:
        - name: "SONARQUBE_JDBC_USERNAME"
          value: "sadmin"
        - name: "SONARQUBE_JDBC_URL"
          value: "jdbc:postgresql://postgres-svc.sonarqube.svc.cluster.local:5432/sonardb"
        - name: "SONARQUBE_JDBC_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        ports:
        - containerPort: 9000
          protocol: TCP
      volumes:
      - name: sonar-data
        persistentVolumeClaim:
          claimName: sonarqube-data-pvc
      - name: sonar-extensions
        persistentVolumeClaim:
          claimName: sonarqube-extensions-pvc

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
  name: sonarqube-svc
  namespace: sonarqube
spec:
  ports:
  - name: sonar
    port: 80
    protocol: TCP
    targetPort: 9000
    nodePort: 30036
  selector:
    app: sonarqube
  type: NodePort
